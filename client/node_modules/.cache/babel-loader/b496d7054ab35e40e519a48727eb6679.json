{"ast":null,"code":"var _jsxFileName = \"/home/lukkstar/Desktop/tester/client/src/components/game/Game.js\";\nimport React, { useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport APIService from \"../../service/APIService\";\nimport { Button, Divider } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function SimpleContainer() {\n  const classes = useStyles();\n  const [answer, setAnswer] = React.useState(\"\");\n  const [current, setCurrent] = React.useState(0);\n  const [level, setLevel] = React.useState(\"\");\n\n  const handleChange = event => {\n    setLevel(event.target.value);\n  };\n\n  const [point, setPoint] = React.useState(0);\n  const [questions, setquestions] = React.useState();\n  const [allAnswers, setAllAnswers] = React.useState([]);\n  const [complete, setComplete] = React.useState(false);\n  const [categories, setCategories] = React.useState();\n  const [chosenCategory, setChosenCategory] = React.useState();\n\n  const handleAnswerChange = event => {\n    setAnswer(event.target.value);\n  };\n\n  const handleChooseCategoryChange = event => {\n    setChosenCategory(event.target.value);\n  };\n\n  useEffect(() => {\n    APIService.getCategories().then(res => {\n      setCategories(res.data);\n    }, [setCategories]);\n  });\n\n  const onStart = () => {\n    setCurrent(0);\n    setComplete(false);\n    setAnswer(\"\");\n    setPoint(0);\n    APIService.getQuestion(level, chosenCategory).then(res => {\n      setquestions(res.data);\n    });\n  };\n\n  const onAnswer = () => {\n    setCurrent(current + 1);\n    setAnswer(\"\");\n\n    if (answer.toLowerCase() === questions[current].answer.toLowerCase()) {\n      setPoint(point + 2);\n    }\n\n    setAllAnswers([...allAnswers, answer]);\n  };\n\n  const onComplete = () => {\n    const all = [...allAnswers, answer];\n    const result = point + 2;\n\n    if (answer.toLowerCase() === questions[current].answer.toLowerCase()) {\n      setPoint(result);\n    }\n\n    APIService.saveResult(result, level, chosenCategory).then(() => {\n      setComplete(true);\n      setAllAnswers(all);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    style: {\n      backgroundColor: \"#fcba03\",\n      height: \"85vh\",\n      marginTop: \"15px\",\n      paddingBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Lets Play\"), complete && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 22\n    }\n  }, \"Score: \", point), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    value: chosenCategory,\n    onChange: handleChooseCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, categories && categories.map((cat, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: cat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, cat);\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: level,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"easy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Normal\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Hard\"))), /*#__PURE__*/React.createElement(Button, {\n    disabled: level === \"\",\n    style: {\n      background: \"white\"\n    },\n    onClick: onStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, questions && questions.length > 0 && /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, questions[current].question), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Write answer\",\n    value: answer,\n    fullWidth: true,\n    onChange: handleAnswerChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), current !== questions.length - 1 ? /*#__PURE__*/React.createElement(Button, {\n    onClick: onAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Submit\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: onComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Finish\")))));\n}","map":{"version":3,"sources":["/home/lukkstar/Desktop/tester/client/src/components/game/Game.js"],"names":["React","useEffect","CssBaseline","Container","makeStyles","TextField","Paper","APIService","Button","Divider","FormControl","InputLabel","Select","MenuItem","useStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","SimpleContainer","classes","answer","setAnswer","useState","current","setCurrent","level","setLevel","handleChange","event","target","value","point","setPoint","questions","setquestions","allAnswers","setAllAnswers","complete","setComplete","categories","setCategories","chosenCategory","setChosenCategory","handleAnswerChange","handleChooseCategoryChange","getCategories","then","res","data","onStart","getQuestion","onAnswer","toLowerCase","onComplete","all","result","saveResult","backgroundColor","height","paddingBottom","textAlign","map","cat","index","background","length","question"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport APIService from \"../../service/APIService\";\nimport { Button, Divider } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SimpleContainer() {\n  const classes = useStyles();\n  const [answer, setAnswer] = React.useState(\"\");\n  const [current, setCurrent] = React.useState(0);\n\n  const [level, setLevel] = React.useState(\"\");\n  const handleChange = (event) => {\n    setLevel(event.target.value);\n  };\n  const [point, setPoint] = React.useState(0);\n  const [questions, setquestions] = React.useState();\n  const [allAnswers, setAllAnswers] = React.useState([]);\n  const [complete, setComplete] = React.useState(false);\n  const [categories, setCategories] = React.useState();\n  const [chosenCategory, setChosenCategory] = React.useState();\n\n  const handleAnswerChange = (event) => {\n    setAnswer(event.target.value);\n  };\n  const handleChooseCategoryChange = (event) => {\n    setChosenCategory(event.target.value);\n  };\n  useEffect(() => {\n    APIService.getCategories().then(\n      (res) => {\n        setCategories(res.data);\n      },\n      [setCategories]\n    );\n  });\n\n  const onStart = () => {\n    setCurrent(0);\n    setComplete(false);\n    setAnswer(\"\");\n    setPoint(0);\n    APIService.getQuestion(level, chosenCategory).then((res) => {\n      setquestions(res.data);\n    });\n  };\n\n  const onAnswer = () => {\n    setCurrent(current + 1);\n    setAnswer(\"\");\n    if (answer.toLowerCase() === questions[current].answer.toLowerCase()) {\n      setPoint(point + 2);\n    }\n\n    setAllAnswers([...allAnswers, answer]);\n  };\n  const onComplete = () => {\n    const all = [...allAnswers, answer];\n    const result = point + 2;\n    if (answer.toLowerCase() === questions[current].answer.toLowerCase()) {\n      setPoint(result);\n    }\n    APIService.saveResult(result, level, chosenCategory).then(() => {\n      setComplete(true);\n      setAllAnswers(all);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container\n        maxWidth=\"sm\"\n        style={{\n          backgroundColor: \"#fcba03\",\n          height: \"85vh\",\n          marginTop: \"15px\",\n          paddingBottom: \"15px\",\n        }}\n      >\n        <h2 style={{ textAlign: \"center\" }}>Lets Play</h2>\n        {complete && <h2>Score: {point}</h2>}\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            value={chosenCategory}\n            onChange={handleChooseCategoryChange}\n          >\n            {categories &&\n              categories.map((cat, index) => {\n                return (\n                  <MenuItem key={index} value={cat}>\n                    {cat}\n                  </MenuItem>\n                );\n              })}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n          <Select value={level} onChange={handleChange}>\n            <MenuItem value={\"easy\"}>Easy</MenuItem>\n            <MenuItem value={\"normal\"}>Normal</MenuItem>\n            <MenuItem value={\"hard\"}>Hard</MenuItem>\n          </Select>\n        </FormControl>\n        <Button\n          disabled={level === \"\"}\n          style={{ background: \"white\" }}\n          onClick={onStart}\n        >\n          Play\n        </Button>\n        <div>\n          {questions && questions.length > 0 && (\n            <Paper>\n              <p>{questions[current].question}</p>\n              <TextField\n                label=\"Write answer\"\n                value={answer}\n                fullWidth\n                onChange={handleAnswerChange}\n              />\n              {current !== questions.length - 1 ? (\n                <Button onClick={onAnswer}>Submit</Button>\n              ) : (\n                <Button onClick={onComplete}>Finish</Button>\n              )}\n            </Paper>\n          )}\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}